apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //依赖本地maven仓库
    implementation 'com.jay.baselibrary:baselibrary:1.0.0'
    //依赖module
//    implementation project(path: ':baselibrary')
}

/////////////////////////////////////发不到到本地Maven仓库--start/////////////////////////////////////
//TODO 第一步 在组件中添加以下发布代码，并填写相关信息，执行gradle uploadArchives 发布aar到本地Maven仓库
apply plugin: 'maven'
uploadArchives {
    //dependencies path: com.jay.sharelibrary:sharelibrary:1.0.0
    repositories.mavenDeployer {
        // 本地路径
        repository(url: MAVEN_LOCAL_REPO_PATH)
        // 唯一标识
        pom.groupId = "com.jay.sharelibrary"
        // 项目名称
        pom.artifactId = "sharelibrary"
        // 版本号
        pom.version = "1.0.1"
    }
}

//TODO 第二步 在项目的build.gradle中添加Maven仓库地址
/*
1，在gradle.properties配置各自的本地Maven仓库地址
#本地Maven仓库地址
MAVEN_LOCAL_REPO_PATH=file:///Users/Shared/Maven/MavenLocalRepo/
#远程Maven仓库的URL
MAVEN_REPO_RELEASE_URL=http://localhost:8081/repository/maven-releases/
2，引用本地Maven仓库地址
maven {  url MAVEN_LOCAL_REPO_PATH }
*/

//TODO 第三步 在app的build.gradle中添加依赖引用
//依赖本地maven仓库
//implementation 'com.jay.sharelibrary:sharelibrary:1.0.1'
//依赖module
//implementation project(path: ':sharelibrary')

/////////////////////////////////////发不到到本地Maven仓库--end/////////////////////////////////////


/////////////////////////////////////发不到到远程Maven仓库--start/////////////////////////////////////
//uploadArchives {
//    //dependencies path: com.jay.sharelibrary:sharelibrary:1.0.0
//    repositories.mavenDeployer {
//        //远程地址
//        repository(url: MAVEN_REPO_RELEASE_URL) {
//            authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
//        }
//        // 唯一标识
//        pom.groupId = "com.jay.sharelibrary"
//        // 项目名称
//        pom.artifactId = "sharelibrary"
//        // 版本号
//        pom.version = "1.0.0"
//    }
//}

/////////////////////////////////////发不到到远程Maven仓库--end/////////////////////////////////////
